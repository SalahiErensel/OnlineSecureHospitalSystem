@page "/doctor/all-patients"

@using OnlineSecureHospitalSystem.Data.DTO
@using OnlineSecureHospitalSystem.Data.Models
@using OnlineSecureHospitalSystem.Services.Admin
@using OnlineSecureHospitalSystem.Services.Authorization
@using OnlineSecureHospitalSystem.Services.Doctor
@inject AccessControlService AccessControl
@inject NavigationManager NavigationManager
@inject AuthorizationService AuthorizationService
@inject IDoctorService DoctorService
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-2 px-2">
    <MudPaper Class="pa-2 pa-md-4">
        <MudGrid>
            <MudItem xs="12" Class="d-flex flex-column flex-md-row align-center justify-space-between">
                <MudText Typo="Typo.h4" Class="mb-2 mb-md-0">
                    All Patients
                </MudText>
            </MudItem>
            <MudItem xs="12">
                <div style="overflow-x: auto; width: 100%;">
                    <MudDataGrid T="AllPatientsDTO"
                                 Items="@allPatientsDTO"
                                 Sortable="true"
                                 Groupable="false"
                                 Pageable="true"
                                 PageSize="10"
                                 RowsPerPageString="Rows per page"
                                 Loading="@loading"
                                 Hover="true"
                                 Striped="true"
                                 Dense="true"
                                 Class="mud-elevation-4"
                                 FixedHeader="false"
                                 Style="min-width: 800px;">
                        <Columns>
                            <PropertyColumn Property="x => x.First_Name"
                                            Title="First Name"
                                            Sortable="true"
                                            Resizable="true"
                                            Style="min-width: 120px;" />
                            <PropertyColumn Property="x => x.Last_Name"
                                            Title="Last Name"
                                            Sortable="true"
                                            Resizable="true"
                                            Style="min-width: 120px;" />
                            <PropertyColumn Property="x => x.Age"
                                            Title="Age"
                                            Sortable="true"
                                            Resizable="true"
                                            Style="min-width: 130px;" />
                            <PropertyColumn Property="x => x.Email"
                                            Title="Email"
                                            Sortable="true"
                                            Resizable="true"
                                            Style="min-width: 200px;" />
                            <PropertyColumn Property="x => x.Phone_Number"
                                            Title="Phone"
                                            Sortable="true"
                                            Resizable="true"
                                            Style="min-width: 130px;" />
                            <PropertyColumn Property="x => x.Address"
                                            Title="Address"
                                            Sortable="true"
                                            Resizable="true"
                                            Style="min-width: 140px;">
                            </PropertyColumn>
                        </Columns>

                        <PagerContent>
                            <MudDataGridPager T="AllPatientsDTO" />
                        </PagerContent>
                    </MudDataGrid>
                </div>
                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="false">
                    <MudAlert Severity="Severity.Info"
                              Variant="Variant.Text"
                              Dense="true"
                              Class="mt-2"
                              Icon="@Icons.Material.Filled.TouchApp">
                        <MudText Typo="Typo.caption">
                            Swipe left/right to see all columns
                        </MudText>
                    </MudAlert>
                </MudHidden>
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code {
    public List<Patients> patientList = new List<Patients>();
    public List<AllPatientsDTO> allPatientsDTO = new List<AllPatientsDTO>();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await AccessControl.CheckAccessAsync(requireDefaultPasswordUpdated: false, allowedRoles: new[] { "Chief Doctor" });

        try
        {
            patientList = await DoctorService.GetAllPatientsAsync();

            allPatientsDTO = patientList.Select(u => new AllPatientsDTO
            {
                Address = u.User!.Address,
                Age = CalculatePatientAge(u.DOB!.Value),
                Email = u.User.Email,
                First_Name = u.User.First_Name,
                Last_Name = u.User.Last_Name,
                Phone_Number = u.User.Phone_Number,
            }).ToList();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading patients: {ex.Message}", Severity.Error);
        }
        finally
        {
            loading = false;
        }
    }

    public int CalculatePatientAge(DateTime dob)
    {
        var today = DateTime.Today;

        var age = today.Year - dob.Year;

        if (dob.Date > today.AddYears(-age)) age--;
        return age;
    }
}
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineSecureHospitalSystem.Data;

#nullable disable

namespace OnlineSecureHospitalSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Appointments", b =>
                {
                    b.Property<int>("Appointment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Appointment_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Appointment_Status")
                        .HasColumnType("TEXT");

                    b.Property<int>("Doctor_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Appointment_ID");

                    b.HasIndex("Doctor_ID");

                    b.HasIndex("Patient_ID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Assignments", b =>
                {
                    b.Property<int>("Assignment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assigned_By")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Curing_Doctor_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Assignment_ID");

                    b.HasIndex("Assigned_By");

                    b.HasIndex("Curing_Doctor_ID");

                    b.HasIndex("Patient_ID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Doctors", b =>
                {
                    b.Property<int>("Doctor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Expertise")
                        .HasColumnType("TEXT");

                    b.Property<int>("Is_Chief")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Doctor_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.MedicalRecords", b =>
                {
                    b.Property<int>("Record_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Curing_Doctor_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Record_Data")
                        .HasColumnType("BLOB");

                    b.Property<string>("Signature")
                        .HasColumnType("TEXT");

                    b.HasKey("Record_ID");

                    b.HasIndex("Curing_Doctor_ID");

                    b.HasIndex("Patient_ID");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Patients", b =>
                {
                    b.Property<int>("Patient_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<int>("User_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Patient_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Roles", b =>
                {
                    b.Property<int>("Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role_Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Role_ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Role_ID = 1,
                            Role_Name = "Admin"
                        },
                        new
                        {
                            Role_ID = 2,
                            Role_Name = "Receptionist"
                        },
                        new
                        {
                            Role_ID = 3,
                            Role_Name = "Chief Doctor"
                        },
                        new
                        {
                            Role_ID = 4,
                            Role_Name = "Curing Doctor"
                        },
                        new
                        {
                            Role_ID = 5,
                            Role_Name = "Consulting Doctor"
                        },
                        new
                        {
                            Role_ID = 6,
                            Role_Name = "Patient"
                        });
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Users", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsDefaultPassword")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("User_ID");

                    b.HasIndex("Role_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Appointments", b =>
                {
                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Doctors", "Doctor")
                        .WithMany()
                        .HasForeignKey("Doctor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Patients", "Patient")
                        .WithMany()
                        .HasForeignKey("Patient_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Assignments", b =>
                {
                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Doctors", "AssignedByDoctor")
                        .WithMany()
                        .HasForeignKey("Assigned_By")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Doctors", "CuringDoctor")
                        .WithMany()
                        .HasForeignKey("Curing_Doctor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Patients", "Patient")
                        .WithMany()
                        .HasForeignKey("Patient_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedByDoctor");

                    b.Navigation("CuringDoctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Doctors", b =>
                {
                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.MedicalRecords", b =>
                {
                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Doctors", "Doctor")
                        .WithMany()
                        .HasForeignKey("Curing_Doctor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Patients", "Patient")
                        .WithMany()
                        .HasForeignKey("Patient_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Patients", b =>
                {
                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineSecureHospitalSystem.Data.Models.Users", b =>
                {
                    b.HasOne("OnlineSecureHospitalSystem.Data.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
